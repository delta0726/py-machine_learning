# ******************************************************************************
# Title       : AI・データサイエンスのための数学プログラミング
# Chapter     : 6 感染症の影響を予測してみよう
# Theme       : 6-8 他生物種や他社との共生関係を説明するロトカボルテラ方程式
# Creat Date  : 2021/1/15
# Final Update:
# Page        : P276 - P278
# ******************************************************************************


# ＜概要＞
# - 食物連鎖(捕食と被食)の関係をロトカボルテラ方程式で表現する
# - ライオンとシマウマの関係をイメージ


# ＜目次＞
# 0 準備
# 1 シミュレーション


# 0 準備 ---------------------------------------------------------------

# ライブラリ
import numpy as np
import matplotlib.pyplot as plt


# 1 シミュレーション ----------------------------------------------------

# ＜ポイント＞
# - シマウマが増えるとライオンが遅れて増える
# - ライオンが増えるとシマウマが減りだす
# - シマウマが減るとライオンが遅れて減少する
# - ライオンが減少するとシマウマが増えだす


# シミュレーション回数
num = 10000

# パラメータ設定
dt = 0.01
alpha = 0.2
beta = 0.4
gamma = 0.3
delta = 0.3

# 初期化（初期値設定）
n1 = np.zeros(num)
n2 = np.zeros(num)
t = np.zeros(num)
n1[0] = 0.3
n2[0] = 0.7

# 時間発展方程式
for i in range(1, num):
    t[i] = i * dt
    delta_n1 = n1[i - 1] * (alpha - beta * n2[i - 1])
    delta_n2 = -n2[i - 1] * (gamma - delta * n1[i - 1])
    n1[i] = delta_n1 * dt + n1[i - 1]
    n2[i] = delta_n2 * dt + n2[i - 1]

# プロット作成
plt.plot(n1, label='n1')
plt.plot(n2, label='n2')
plt.legend()
plt.show()
