# ******************************************************************************
# Title       : AI・データサイエンスのための数学プログラミング
# Chapter     : 6 感染症の影響を予測してみよう
# Theme       : 6-7 ロトカボルテラ方程式のパラメータを変化させ直感的に理解する
# Creat Date  : 2021/1/15
# Final Update:
# Page        : P273 - P275
# ******************************************************************************


# ＜概要＞
# - ロトカボルテラ方程式はロジスティック方程式をベースに拡張したもの
#   --- キャパシティに他の種の影響を導入する


# ＜目次＞
# 0 準備
# 1 関数定義


# 0 準備 ---------------------------------------------------------------

# ライブラリ
import numpy as np
import matplotlib.pyplot as plt


# 1 関数定義 ------------------------------------------------------------

# ＜ポイント＞
# - ロトカボルテラ方程式の主要パラメータを変更できるように関数を定義する
# --- 初期値 ： r1, r2
# --- キャパシティ：K1, K2
# --- 微分係数： a, b


def rat_simulation(r1=1, r2=1, K1=110, K2=80, a=0.1, b=1.1, init1=2, init2=2):
    # 共通パラメータ
    # --- 期間変化の単位(固定値)
    # --- シミュレーション回数
    dt = 1.0
    num = 10

    # 初期化（初期値設定）
    n1 = np.zeros(num)
    n2 = np.zeros(num)
    n1[0] = init1
    n2[0] = init2

    # 時間発展方程式
    # --- capacityを生物種1と生物種2の合計で決まるように設定している
    for t in range(1, num):
        delta_n1 = int(r1 * n1[t - 1] * (1 - (n1[t - 1] + a * n2[t - 1]) / K1))
        n1[t] = delta_n1 * dt + n1[t - 1]
        delta_n2 = int(r2 * n2[t - 1] * (1 - (n2[t - 1] + b * n1[t - 1]) / K2))
        n2[t] = delta_n2 * dt + n2[t - 1]

    plt.plot(n1, label='n1')
    plt.plot(n2, label='n2')
    plt.ylim(0, 120)
    plt.legend()
    plt.show()


# 2 パラメータを変えてシミュレーション ------------------------------------------

# ベースライン
# --- n1がシェアを獲得する
rat_simulation()

# 微分係数(増加ペース)の変更
rat_simulation(a=1.9)
rat_simulation(a=2.1)

# 初期値を変更
rat_simulation(init2=5)
rat_simulation(init2=10)
